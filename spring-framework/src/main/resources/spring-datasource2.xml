<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

   <!-- 读取数据库链接配置 -->
    <context:property-placeholder location="classpath:spring-datasourc.properties"/>

    <!-- 由ioc容器负责扫描并实例化对象-->
    <context:component-scan base-package="com.example.jdbc"/>
    <!--动态数据库链接-->
    <!--<bean id="changed" class="?">
        dataSource1
        dataSource2
    </bean>-->
    <!--实例化jdbc模板对先象  操作数据库模板  关联依赖 -->
    <bean id="JdbcOperations" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSourceSwitcher"/>
    </bean>
    <!--3.创建数据链路连接池 -->
    <!--3.1 获取数据库连接信息
        3.2 根据链接信息链接数据库
        3.3 抓取一定数量的来链接到连接池
        3.4 链接池初始化完毕，可以为应用提供链接使用
      -->


    <!-- Hikari-->
    <bean id="dataSource2" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.db2.driver}"/>
        <property name="jdbcUrl" value="${jdbc.db2.url}"/>
        <property name="username" value="${jdbc.db2.username}"/>
        <property name="password" value="${jdbc.db2.password}"/>
        <property name="minimumIdle" value="5"/>
        <property name="maximumPoolSize" value="20"/>
    </bean>
   <!-- druid-->
    <bean id="dataSource1" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.db1.driver}"/>
        <property name="url" value="${jdbc.db1.url}"/>
        <property name="username" value="${jdbc.db1.username}"/>
        <property name="password" value="${jdbc.db1.password}"/>
        <property name="initialSize" value="${pool.initialSize}"/>
        <property name="maxActive"  value="10"/>
    </bean>
 <!--启动aop注解支持-->
    <aop:aspectj-autoproxy/>

    <!-- 6.配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <constructor-arg ref="dataSourceSwitcher"/>
    </bean>
    <!--注解型事务通知-->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- 事务 声明型事务-->
    <!--7. 配置aop扫描需要绑定事物的方法-->
    <aop:config>
        <!--拦截方法的规则()拦截所有方法-->
        <aop:pointcut id="transactionPointcut" expression="execution(* com.example.*.service.impl.*.*(..) )"/>
        <!--把拦截到得方法交由通知实现-->
        <aop:advisor advice-ref="transactionAdvice"  pointcut-ref="transactionPointcut" order="3"/>
    </aop:config>
     <!-- 声明型事务通知-->
    <tx:advice id="transactionAdvice"  transaction-manager="transactionManager">
       <tx:attributes>
           <tx:method name="insert"/>
           <tx:method name="update*"/>
          <!-- <tx:method name="update*" propagation="REQUIRED"/ >-->
           <tx:method name="delete*"/>
           <!--bug 数据源不能切换  order+数字 数字越小优先级越高-->
           <tx:method name="*" read-only="true"/>
       </tx:attributes>
    </tx:advice>
    <!--编程型事务通知-->
   <!-- <bean id="transactionOperations" class="org.springframework.transaction.support.TransactionTemplate">
      <constructor-arg ref="transactionManager"/>
    </bean>-->
</beans>